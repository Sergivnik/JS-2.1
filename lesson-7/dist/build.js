(()=>{"use strict";Vue.component("field_search",{data:()=>({searchLine:""}),template:'\n  <div>\n    <input \n      class="goods-search" \n      v-model="searchLine"\n    />\n    <button \n      class="search-button" \n      type="button" \n      @click="click_search">\n      Искать\n    </button>\n  </div>',methods:{click_search(){hostBus.$emit("clickSearch",this.searchLine)}}});const t=new Vue;Vue.component("goods-list",{props:["goods"],data:()=>({filteredGoods:[]}),mounted(){this.filteredGoods=this.goods.slice()},template:'\n    <div class="goods-list">\n      <goods-item v-for="good in filteredGoods" \n        :good="good" :key="good.id_product">\n      </goods-item>\n    </div>',created(){t.$on("clickSearch",this.filterGoods)},methods:{filterGoods(t){const e=new RegExp(t,"i");this.filteredGoods=this.goods.filter((t=>t.product_name.match(e)))}}}),Vue.component("goods-item",{props:["good"],template:'\n    <div class="goods-item">\n      <h3>{{ good.product_name }}</h3>\n      <img v-if="good.img !=null" :src="good.img" width="100" height="100" alt="">\n      <img v-else src="img/noPhoto.jpg" width="100" height="100" alt="">\n      <p>Цена: {{ good.price }} рублей</p>\n      <button v-on:click="click_btn" class="btn-to-cart">В корзину</button>\n    </div>\n  ',methods:{click_btn(){t.$emit("addGoodToBasket",this.good)}}}),Vue.component("basket-list",{data:()=>({basketGoods:[]}),template:'\n    <div class="basket-list">\n      <basket-item \n        v-for="(good,index) in basketGoods" \n        :good="good" \n        :index="index" \n        :key="good.id_product">\n      </basket-item>\n      <p class="summ">Итого на сумму {{sum}} рублей</p>\n    </div>',mounted(){this.makeGETRequest("/addToBasket").then((t=>{this.basketGoods=JSON.parse(t)})).catch((()=>{this.isError=!0}))},created(){t.$on("addGoodToBasket",this.addGoodToBasket),t.$on("addGoodInBasket",this.addInBasket),t.$on("delGoodInBasket",this.delInBasket)},beforeDestroy(){t.$off("addGoodToBasket"),t.$off("addGoodInBasket"),t.$off("delGoodInBasket")},computed:{sum(){let t=0;return this.basketGoods.forEach((e=>{t+=e.price*e.number})),t}},methods:{async makeGETRequest(t){let e=await fetch(t);if(e.ok)return await e.text()},addInBasket:function(t){this.basketGoods[t].number++,e.makePOSTRequest("/changeBasket",this.basketGoods[t])},delInBasket:function(t){this.basketGoods[t].number>1?(this.basketGoods[t].number--,e.makePOSTRequest("/changeBasket",this.basketGoods[t])):(e.makePOSTRequest("/delFromBasket",this.basketGoods[t]),this.basketGoods.splice(t,1))},addGoodToBasket:function(t){let o=!0;for(let e of this.basketGoods)e.id_product==t.id_product&&(o=!1,e.number++);o&&(this.basketGoods.push({...Object(t),number:1}),e.makePOSTRequest("/addToBasket",this.basketGoods[this.basketGoods.length-1]))}}}),Vue.component("basket-item",{props:["good","index"],template:'\n    <div class="goods-item">\n      <h3>{{ good.product_name }}</h3>\n      <img v-if="good.img !=null" :src="good.img" width="100" height="100" alt="">\n      <img v-else src="img/noPhoto.jpg" width="100" height="100" alt="">\n      <p>Цена: {{ good.price }} рублей</p>\n      <p>Количество: {{ good.number }}</p>\n      <button @click="addGoodInBasket" class="btn-in-cart">Добавить</button>\n      <button @click="delGoodInBasket" class="btn-in-cart">Удалить</button>\n    </div>\n  ',methods:{addGoodInBasket(){t.$emit("addGoodInBasket",this.index)},delGoodInBasket(){t.$emit("delGoodInBasket",this.index)}}}),Vue.component("net-error",{template:'<h2 class="h2error">Чёт не так пошло((</h2>'});const e=new Vue({el:"#app",data:{goods:[],isVisibleCart:!1,isError:!1},methods:{async makeGETRequest(t){let e=await fetch(t);if(e.ok)return await e.text()},async makePOSTRequest(t,e){await fetch(t,{method:"POST",headers:{"Content-Type":"application/json; charset=UTF-8"},body:JSON.stringify(e)})},basketVisible(){this.isVisibleCart=!this.isVisibleCart}},mounted(){this.makeGETRequest("/data").then((t=>{this.goods=JSON.parse(t)})).catch((()=>{this.isError=!0}))}})})();